// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[EditText] box props: [leftElement, rightElement] renders box type input with leftElement and rightElement 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        null,
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          null,
          Object {
            "borderRadius": 3,
            "borderWidth": 0.6,
          },
          null,
          null,
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
            Object {
              "width": 40,
            },
            undefined,
          ]
        }
      >
        <View />
      </View>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
            Object {
              "width": 40,
            },
            undefined,
          ]
        }
      >
        <View />
      </View>
    </View>
  </View>
</View>
`;

exports[`[EditText] box props: [onFocus, onBlur] focused is false renders box type input with props errorText 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        Object {
          "color": "#FF8989",
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          Object {
            "borderColor": "#FF8989",
          },
          Object {
            "borderRadius": 3,
            "borderWidth": 0.6,
          },
          Object {
            "paddingLeft": 15,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#ff8989",
          "fontSize": 12,
          "fontWeight": "500",
          "marginBottom": 0,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
        },
        Object {
          "color": "#FF8989",
        },
        undefined,
      ]
    }
  >
    error text
  </Text>
</View>
`;

exports[`[EditText] box props: [onFocus, onBlur] focused is true renders box type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        null,
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          null,
          Object {
            "borderRadius": 3,
            "borderWidth": 0.6,
          },
          Object {
            "paddingLeft": 15,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`[EditText] box renders without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        null,
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          null,
          Object {
            "borderRadius": 3,
            "borderWidth": 0.6,
          },
          Object {
            "paddingLeft": 15,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`[EditText] box row props: [label] focus is false renders row type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
          "borderRadius": 3,
          "borderWidth": 0.6,
        },
        null,
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#b9b9c4",
            "fontSize": 14,
            "fontWeight": "bold",
          },
          null,
          Object {
            "marginLeft": 15,
            "width": 110,
          },
          undefined,
        ]
      }
    >
      label text
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`[EditText] box row props: [label] focus is true renders row type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
          "borderRadius": 3,
          "borderWidth": 0.6,
        },
        null,
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#b9b9c4",
            "fontSize": 14,
            "fontWeight": "bold",
          },
          null,
          Object {
            "marginLeft": 15,
            "width": 110,
          },
          undefined,
        ]
      }
    >
      label text
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`[EditText] box row props: [label] only label without focus renders row type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
          "borderRadius": 3,
          "borderWidth": 0.6,
        },
        Object {
          "borderColor": "#FF8989",
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#b9b9c4",
            "fontSize": 14,
            "fontWeight": "bold",
          },
          Object {
            "color": "#FF8989",
          },
          Object {
            "marginLeft": 15,
            "width": 110,
          },
          undefined,
        ]
      }
    >
      label text
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#ff8989",
          "fontSize": 12,
          "fontWeight": "500",
          "marginBottom": 0,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
        },
      ]
    }
  >
    errorText
  </Text>
</View>
`;

exports[`[EditText] box row renders without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
          "borderRadius": 3,
          "borderWidth": 0.6,
        },
        null,
        undefined,
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          Object {
            "paddingRight": 15,
          },
          undefined,
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`[EditText] default Default type input with errorText renders default type input with errorText 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        Object {
          "color": "#FF8989",
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          Object {
            "borderColor": "#FF8989",
          },
          Object {
            "borderBottomWidth": 0.6,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#ff8989",
          "fontSize": 12,
          "fontWeight": "500",
          "marginBottom": 0,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
        },
        Object {
          "color": "#FF8989",
        },
        undefined,
      ]
    }
  >
    error text
  </Text>
</View>
`;

exports[`[EditText] default props: [onFocus, onBlur] With errorText renders default type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        Object {
          "color": "#FF8989",
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          Object {
            "borderColor": "#FF8989",
          },
          Object {
            "borderBottomWidth": 0.6,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#ff8989",
          "fontSize": 12,
          "fontWeight": "500",
          "marginBottom": 0,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
        },
        Object {
          "color": "#FF8989",
        },
        undefined,
      ]
    }
  >
    error text
  </Text>
</View>
`;

exports[`[EditText] default props: [onFocus, onBlur] Without errorText renders default type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        null,
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          null,
          Object {
            "borderBottomWidth": 0.6,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        testID="INPUT_TEST"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`[EditText] default renders without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#b9b9c4",
          "fontSize": 14,
          "fontWeight": "500",
          "marginBottom": 5,
        },
        null,
        undefined,
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
          },
          Object {
            "borderColor": "#eaeaf9",
          },
          null,
          Object {
            "borderBottomWidth": 0.6,
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onBlur={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#2c374e",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 15,
              "fontWeight": "500",
              "height": "100%",
              "paddingBottom": 15,
              "paddingTop": 15,
            },
          ]
        }
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`[EditText] row props: [label] focus is false renders row type input without errorText 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
        },
        null,
        Object {
          "borderBottomWidth": 0.6,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#b9b9c4",
            "fontSize": 14,
            "fontWeight": "bold",
          },
          null,
          Object {
            "width": 110,
          },
          undefined,
        ]
      }
    >
      label text
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          undefined,
          Object {
            "textAlign": "right",
          },
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`[EditText] row props: [label] focus is true renders row type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
        },
        null,
        Object {
          "borderBottomWidth": 0.6,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#b9b9c4",
            "fontSize": 14,
            "fontWeight": "bold",
          },
          null,
          Object {
            "width": 110,
          },
          undefined,
        ]
      }
    >
      label text
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          undefined,
          Object {
            "textAlign": "right",
          },
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`[EditText] row props: [label] only label without focus renders row type input 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
        },
        Object {
          "borderColor": "#FF8989",
        },
        Object {
          "borderBottomWidth": 0.6,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#b9b9c4",
            "fontSize": 14,
            "fontWeight": "bold",
          },
          Object {
            "color": "#FF8989",
          },
          Object {
            "width": 110,
          },
          undefined,
        ]
      }
    >
      label text
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          undefined,
          Object {
            "textAlign": "right",
          },
        ]
      }
      underlineColorAndroid="transparent"
    />
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#ff8989",
          "fontSize": 12,
          "fontWeight": "500",
          "marginBottom": 0,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
        },
      ]
    }
  >
    errorText
  </Text>
</View>
`;

exports[`[EditText] row renders without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
        "flexDirection": "column",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Object {
          "borderColor": "#eaeaf9",
        },
        null,
        Object {
          "borderBottomWidth": 0.6,
        },
        undefined,
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onBlur={[Function]}
      onFocus={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#2c374e",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "fontSize": 14,
            "fontWeight": "bold",
            "height": "100%",
            "paddingBottom": 16,
            "paddingTop": 16,
          },
          undefined,
          Object {
            "textAlign": "right",
          },
        ]
      }
      testID="INPUT_TEST"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;
